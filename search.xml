<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>EverCTF_2019 WriteUp</title>
    <url>/everctf2019-writeup/</url>
    <content><![CDATA[<div class="note warning"><p>EverCTF 是北京科技大学第二届 CTF 校赛, 花了一周的时间练练一些题, 菜鸡一枚. 过去水了水</p>
</div>
<span id="more"></span>

<h2 id="Misc"><a href="#Misc" class="headerlink" title="Misc"></a>Misc</h2><h3 id="jigsaw"><a href="#jigsaw" class="headerlink" title="jigsaw"></a>jigsaw</h3><p>二维码拼图, 还需要反转一下颜色.<br><img data-src="2019-04-01-10-13-03.png"><br>扫描得到 flag</p>
<blockquote>
<p>everctf{qR_c0de_1s_g00d}</p>
</blockquote>
<h3 id="玛尔博吉"><a href="#玛尔博吉" class="headerlink" title="玛尔博吉"></a>玛尔博吉</h3><p>打开文件, 复制代码, 粘贴到 <span class="exturl" data-url="aHR0cDovL3d3dy5jb21waWxlb25saW5lLmNvbS9leGVjdXRlX21hbGJvbGdlX29ubGluZS5waHA=">这里<i class="fa fa-external-link-alt"></i></span>, 运行即得到 flag</p>
<blockquote>
<p>everctf{m41b0lge_1s_4maz1ing}</p>
</blockquote>
<h3 id="俄罗斯套包"><a href="#俄罗斯套包" class="headerlink" title="俄罗斯套包"></a>俄罗斯套包</h3><p>解压后不断得到新的压缩包, 气到了, 直接 winhex 打开, 搜索 flag, 找到最后一个,<br><img data-src="2019-04-01-10-18-59.png"><br>将最后的片段新建保存, 解压, 打开, 得到 txt, 打开得到 flag.<br><img data-src="2019-04-01-10-19-27.png"></p>
<blockquote>
<p>everctf{z1P_z4p_Z1p_zap}</p>
</blockquote>
<h3 id="永远也猜不到的密码"><a href="#永远也猜不到的密码" class="headerlink" title="永远也猜不到的密码"></a>永远也猜不到的密码</h3><p>这个题是真的有趣, 打开压缩包, 打开 word, 启用编辑, 然后<br><img data-src="2019-04-01-10-20-00.png"><br>是的, 没错！word 提示了拼写错误！！！感谢巨硬, 一直被我 diss 的拼写检查还是有功的！！<br>so, 直接全选, 复制, 粘贴, 搞定, 不带走云彩.</p>
<blockquote>
<p>everctf{The_m05t_d4nger0u5 _1s_the_s4fe5t}</p>
</blockquote>
<h3 id="红玫瑰与白玫瑰"><a href="#红玫瑰与白玫瑰" class="headerlink" title="红玫瑰与白玫瑰"></a>红玫瑰与白玫瑰</h3><p>没说的, 直接 binwalk, 看到<br><img data-src="2019-04-01-10-34-21.png"><br>自动分离后, 得到的东西有点点难受<br><img data-src="2019-04-01-10-36-10.png"><br>想着是不是里面改了文件头, 于是 WinHex 修改<br>。。。<br>然并卵, 暂时跳过<br>有提示了, LSB, 打开 StegSolve 一阵乱点, 还是没用。。。放弃<br>(后来知道是 bgr。。。没用乱点这个。。。最开始还以为红玫瑰与白玫瑰, 是要把两张图片做与然后找 LSB 呢。。。)</p>
<h3 id="心跳加速"><a href="#心跳加速" class="headerlink" title="心跳加速"></a>心跳加速</h3><p>Github 上找代码, 然而能够运行的准确率不高, 据说准确率高的却不能运行。。。真的是相当难受了<br>还是硬刚吧, 把能够运行的代码改了改, 然后就只需要自己拼图了<br>在尝试了估计有 300 多次的拼图后, 终于第 262 个找到了<br>账号是: fdddbdbfbb973<br>来看看这句诗是什么呢?<br><img data-src="2019-04-02-16-48-44.png"><br>切, 我还以为是 “苟利国家生死以” 的英语版呢。。。<br>可以说是十分羡慕那些全程用代码实现的 dalao 了, 要不是 dalao 鼓励说不超过 300, 我还真的就不想拼图了<br>最后, 这道题告诉我, 拼图还是很好玩的, 尤其是在无聊的情况下 (手动黑脸. jpg)<br>附修改后的手动拼图代码</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> random</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">from</span> io <span class="keyword">import</span> BytesIO</span><br><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line"><span class="keyword">from</span> selenium.common.exceptions <span class="keyword">import</span> TimeoutException</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver <span class="keyword">import</span> ActionChains</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.common.by <span class="keyword">import</span> By</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.support.ui <span class="keyword">import</span> WebDriverWait</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.support <span class="keyword">import</span> expected_conditions <span class="keyword">as</span> EC</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">USER_NAME = <span class="string">&#x27;&#x27;</span>  <span class="comment"># 账户</span></span><br><span class="line">PASSWORD = <span class="string">&#x27;qqq111&#x27;</span>  <span class="comment"># 密码</span></span><br><span class="line">MULTIPE = <span class="number">1.5</span>  <span class="comment"># 显示比例，我这里是 150%</span></span><br><span class="line">BORDER = <span class="number">6</span>  <span class="comment"># 滑块左侧在验证码图片上的 x 轴坐标为 6</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CrackBili</span>(<span class="params"><span class="built_in">object</span></span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self</span>):</span></span><br><span class="line">        self.url = <span class="string">&#x27;https://passport.bilibili.com/login&#x27;</span></span><br><span class="line">        self.browser = webdriver.Chrome()</span><br><span class="line">        self.browser.maximize_window()</span><br><span class="line">        self.wait = WebDriverWait(self.browser, <span class="number">10</span>)</span><br><span class="line">        self.wait_pass = WebDriverWait(self.browser, <span class="number">1</span>)</span><br><span class="line">        self.user_name = USER_NAME</span><br><span class="line">        self.password = PASSWORD</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__del__</span>(<span class="params">self</span>):</span></span><br><span class="line">        self.browser.close()</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_slider</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        获取滑块</span></span><br><span class="line"><span class="string">        :return: 滑块对象</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        slider = self.wait.until(EC.element_to_be_clickable((By.CLASS_NAME, <span class="string">&#x27;gt_slider_knob&#x27;</span>)))</span><br><span class="line">        <span class="keyword">return</span> slider</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_position</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        获取验证码位置</span></span><br><span class="line"><span class="string">        :return: 验证码位置元组</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        img = self.wait.until(EC.presence_of_element_located((By.CLASS_NAME, <span class="string">&#x27;gt_box&#x27;</span>)))</span><br><span class="line">        time.sleep(<span class="number">2</span>)</span><br><span class="line">        location = img.location</span><br><span class="line">        size = img.size</span><br><span class="line">        top, bottom, left, right = location[<span class="string">&#x27;y&#x27;</span>], location[<span class="string">&#x27;y&#x27;</span>] + size[<span class="string">&#x27;height&#x27;</span>], location[<span class="string">&#x27;x&#x27;</span>], location[<span class="string">&#x27;x&#x27;</span>] + size[</span><br><span class="line">            <span class="string">&#x27;width&#x27;</span>]</span><br><span class="line">        <span class="keyword">return</span> (top, bottom, left, right)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_screenshot</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        获取网页截图</span></span><br><span class="line"><span class="string">        :return: 截图对象</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        screenshot = self.browser.get_screenshot_as_png()</span><br><span class="line">        screenshot = Image.<span class="built_in">open</span>(BytesIO(screenshot))</span><br><span class="line">        <span class="keyword">return</span> screenshot</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_bili_image</span>(<span class="params">self, name=<span class="string">&#x27;captcha.png&#x27;</span></span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        获取验证码图片</span></span><br><span class="line"><span class="string">        :return: 图片对象</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        top, bottom, left, right = self.get_position()</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;验证码位置&#x27;</span>, left, top, right, bottom)</span><br><span class="line">        screenshot = self.get_screenshot()</span><br><span class="line">        captcha = screenshot.crop(<span class="built_in">map</span>(<span class="keyword">lambda</span> x: <span class="built_in">int</span>(x * MULTIPE), (left, top, right, bottom)))</span><br><span class="line">        captcha.save(name)</span><br><span class="line">        <span class="keyword">return</span> captcha</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">open</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        打开网页输入用户名密码</span></span><br><span class="line"><span class="string">        :return: None</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        self.browser.get(self.url)</span><br><span class="line">        user_name = self.wait.until(EC.presence_of_element_located((By.ID, <span class="string">&#x27;login-username&#x27;</span>)))</span><br><span class="line">        password = self.wait.until(EC.presence_of_element_located((By.ID, <span class="string">&#x27;login-passwd&#x27;</span>)))</span><br><span class="line">        user_name.send_keys(self.user_name)</span><br><span class="line">        password.send_keys(self.password)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">close</span>(<span class="params">self</span>):</span></span><br><span class="line">        self.browser.close()</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_gap</span>(<span class="params">self, image1, image2</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        获取缺口偏移量</span></span><br><span class="line"><span class="string">        :param image1: 不带缺口图片</span></span><br><span class="line"><span class="string">        :param image2: 带缺口图片</span></span><br><span class="line"><span class="string">        :return:</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        left = <span class="built_in">int</span>(<span class="number">60</span> * MULTIPE)  <span class="comment"># 滑块最右测在验证码图片上的 x 坐标为 60</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(left, image1.size[<span class="number">0</span>]):</span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(image1.size[<span class="number">1</span>]):</span><br><span class="line">                <span class="keyword">if</span> <span class="keyword">not</span> self.is_pixel_equal(image1, image2, i, j):</span><br><span class="line">                    left = i</span><br><span class="line">                    <span class="keyword">return</span> left</span><br><span class="line">        <span class="keyword">return</span> left</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">is_pixel_equal</span>(<span class="params">self, image1, image2, x, y</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        判断两个像素是否相同</span></span><br><span class="line"><span class="string">        :param image1: 图片 1</span></span><br><span class="line"><span class="string">        :param image2: 图片 2</span></span><br><span class="line"><span class="string">        :param x: 位置 x</span></span><br><span class="line"><span class="string">        :param y: 位置 y</span></span><br><span class="line"><span class="string">        :return: 像素是否相同</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        <span class="comment"># 取两个图片的像素点</span></span><br><span class="line">        pixel1 = image1.load()[x, y]</span><br><span class="line">        pixel2 = image2.load()[x, y]</span><br><span class="line">        threshold = <span class="number">60</span></span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">abs</span>(pixel1[<span class="number">0</span>] - pixel2[<span class="number">0</span>]) &lt; threshold <span class="keyword">and</span> <span class="built_in">abs</span>(pixel1[<span class="number">1</span>] - pixel2[<span class="number">1</span>]) &lt; threshold <span class="keyword">and</span> <span class="built_in">abs</span>(</span><br><span class="line">                pixel1[<span class="number">2</span>] - pixel2[<span class="number">2</span>]) &lt; threshold:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_track</span>(<span class="params">self, distance</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        根据偏移量获取移动轨迹</span></span><br><span class="line"><span class="string">        一开始加速，然后减速，生长曲线，且加入点随机变动</span></span><br><span class="line"><span class="string">        :param distance: 偏移量</span></span><br><span class="line"><span class="string">        :return: 移动轨迹</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        <span class="comment"># 移动轨迹</span></span><br><span class="line">        track = []</span><br><span class="line">        <span class="comment"># 当前位移</span></span><br><span class="line">        current = <span class="number">0</span></span><br><span class="line">        <span class="comment"># 减速阈值</span></span><br><span class="line">        mid = distance * <span class="number">3</span> / <span class="number">4</span></span><br><span class="line">        <span class="comment"># 间隔时间</span></span><br><span class="line">        t = <span class="number">0.10</span></span><br><span class="line">        v = <span class="number">0</span></span><br><span class="line">        <span class="keyword">while</span> current &lt; distance:</span><br><span class="line">            <span class="keyword">if</span> current &lt; mid:</span><br><span class="line">                a = random.randint(<span class="number">2</span>, <span class="number">3</span>)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                a = - random.randint(<span class="number">6</span>, <span class="number">7</span>)</span><br><span class="line">            v0 = v</span><br><span class="line">            v = v0 + a * t</span><br><span class="line">            move = v0 * t + <span class="number">1</span> / <span class="number">2</span> * a * t * t</span><br><span class="line">            current += move</span><br><span class="line">            track.append(<span class="built_in">round</span>(move))</span><br><span class="line">        <span class="keyword">return</span> track</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">move_to_gap</span>(<span class="params">self, slider, track</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        拖动滑块到缺口处</span></span><br><span class="line"><span class="string">        :param slider: 滑块</span></span><br><span class="line"><span class="string">        :param track: 轨迹</span></span><br><span class="line"><span class="string">        :return:</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        ActionChains(self.browser).click_and_hold(slider).perform()</span><br><span class="line">        <span class="keyword">for</span> x <span class="keyword">in</span> track:</span><br><span class="line">            ActionChains(self.browser).move_by_offset(xoffset=x, yoffset=<span class="number">0</span>).perform()</span><br><span class="line">        time.sleep(<span class="number">0.5</span>)</span><br><span class="line">        ActionChains(self.browser).release().perform()</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">login</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        登录</span></span><br><span class="line"><span class="string">        :return: None</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        submit = self.wait.until(EC.element_to_be_clickable((By.CLASS_NAME, <span class="string">&#x27;btn-login&#x27;</span>)))</span><br><span class="line">        submit.click()</span><br><span class="line">        time.sleep(<span class="number">7</span>)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;登录成功&#x27;</span>)</span><br><span class="line">        self.close()</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">refresh</span>(<span class="params">self</span>):</span></span><br><span class="line">        refresh = self.wait.until(EC.element_to_be_clickable((By.CLASS_NAME, <span class="string">&#x27;gt_refresh_button&#x27;</span>)))</span><br><span class="line">        refresh.click()</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">crack</span>(<span class="params">self, slider</span>):</span></span><br><span class="line">        <span class="comment"># 将鼠标移至滑块对象</span></span><br><span class="line">        ActionChains(self.browser).move_to_element(slider).perform()</span><br><span class="line">        <span class="comment"># 获取验证码图片</span></span><br><span class="line">        image1 = self.get_bili_image(<span class="string">&#x27;captcha1.png&#x27;</span>)</span><br><span class="line">        ActionChains(self.browser).click_and_hold(slider).perform()</span><br><span class="line">        <span class="comment"># 获取带缺口的验证码图片</span></span><br><span class="line">        image2 = self.get_bili_image(<span class="string">&#x27;captcha2.png&#x27;</span>)</span><br><span class="line">        <span class="comment"># 获取缺口位置</span></span><br><span class="line">        gap = self.get_gap(image1, image2)</span><br><span class="line">        <span class="comment"># 截图中是 150% 的距离，要除掉</span></span><br><span class="line">        gap = <span class="built_in">int</span>(gap / MULTIPE)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;缺口位置&#x27;</span>, gap)</span><br><span class="line">        <span class="comment"># 减去缺口位移</span></span><br><span class="line">        gap -= BORDER</span><br><span class="line">        <span class="comment"># 获取移动轨迹</span></span><br><span class="line">        track = self.get_track(gap)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;滑动轨迹&#x27;</span>, track)</span><br><span class="line">        <span class="comment"># 拖动滑块</span></span><br><span class="line">        self.move_to_gap(slider, track)</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            success = self.wait_pass.until(</span><br><span class="line">                EC.text_to_be_present_in_element((By.CLASS_NAME, <span class="string">&#x27;gt_info_text&#x27;</span>), <span class="string">&#x27;验证通过&#x27;</span>))</span><br><span class="line">            <span class="built_in">print</span>(success)</span><br><span class="line">        <span class="keyword">except</span> TimeoutException:</span><br><span class="line">            success = <span class="literal">None</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># 失败后重试</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> success:</span><br><span class="line">            ActionChains(self.browser).move_to_element(slider).perform()</span><br><span class="line">            self.refresh()</span><br><span class="line">            self.crack(slider)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            self.login()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    <span class="comment"># 创建实例</span></span><br><span class="line">    <span class="comment"># 输入用户名密码</span></span><br><span class="line">    <span class="comment"># crack.name = &#x27;hfjhjhhjfh595&#x27;</span></span><br><span class="line">    f = <span class="built_in">open</span>(<span class="string">&#x27;ctf.txt&#x27;</span>, <span class="string">&#x27;r&#x27;</span>)</span><br><span class="line">    i = <span class="number">1</span></span><br><span class="line">    <span class="keyword">for</span> line <span class="keyword">in</span> f:</span><br><span class="line">        crack = CrackBili()</span><br><span class="line">        crack.user_name = line</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;第&#x27;</span> + <span class="built_in">str</span>(i) + <span class="string">&#x27;次尝试, username=&#x27;</span>, crack.user_name)</span><br><span class="line">        i += <span class="number">1</span></span><br><span class="line">        crack.<span class="built_in">open</span>()</span><br><span class="line">        time.sleep(<span class="number">4</span>)</span><br><span class="line">        crack.login()</span><br><span class="line">        <span class="comment"># crack.close()</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;开始下一次的尝试&#x27;</span>)</span><br><span class="line">        time.sleep(<span class="number">2</span>)</span><br><span class="line">    f.close()</span><br><span class="line">    <span class="comment"># # 获取滑块对象</span></span><br><span class="line">    <span class="comment"># slider = crack.get_slider()</span></span><br><span class="line">    <span class="comment"># crack.crack(slider)</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="Re"><a href="#Re" class="headerlink" title="Re"></a>Re</h2><p>直接拖入 IDA, 然后<br><img data-src="2019-04-02-11-56-54.png"><br>太简单了吧。。。</p>
<blockquote>
<p>flag{123_Buff3r_0v3rf|0w}</p>
</blockquote>
<h2 id="Pwn"><a href="#Pwn" class="headerlink" title="Pwn"></a>Pwn</h2><p>没经验, 不会, 不了解</p>
<h2 id="Ppc"><a href="#Ppc" class="headerlink" title="Ppc"></a>Ppc</h2><p>跳过</p>
<h2 id="Blockchain"><a href="#Blockchain" class="headerlink" title="Blockchain"></a>Blockchain</h2><p>跳过 (没错, 与易经相关的都跳过)</p>
<h3 id="cockroach"><a href="#cockroach" class="headerlink" title="cockroach"></a>cockroach</h3><p>查看源码, 颜文字加密。。。复制粘贴控制台, 报错, 无 web3, 放弃。。。</p>
<h2 id="Crypto"><a href="#Crypto" class="headerlink" title="Crypto"></a>Crypto</h2><h3 id="足够安全的-RSA"><a href="#足够安全的-RSA" class="headerlink" title="足够安全的 RSA"></a>足够安全的 RSA</h3><p>复制粘贴了两次 N, 电脑死机了两次。。。<br>然后在 Github 上找到了不需要复制粘贴的工具 (<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tLzNzdW1tZXIvQ1RGLVJTQS10b29s">CTF-RSA-Tools<i class="fa fa-external-link-alt"></i></span>, 配好了 RSA 的环境, 结果还是解不开。。。相当真实<br>后来想到 e=23, 可以用小 e 模式的, 然而 N 太长, 唉, 早知道当时写脚本了。。。怪我不该偷懒 (其实是有其他事情, 没时间搞了)</p>
<h3 id="侠客行"><a href="#侠客行" class="headerlink" title="侠客行"></a>侠客行</h3><p>虽然我是金庸武侠迷, 但是, 侠客行我真的没有看过. 跳过</p>
<h3 id="RSA-共模"><a href="#RSA-共模" class="headerlink" title="RSA 共模"></a>RSA 共模</h3><p>看我用之前配好的环境!!!<br>三行命令搞定这个题<br>先从公钥文件中获取参数, 再将文件写成标准格式 (工具规定的), 然后运行, 搞定, 大功告成!<br><img data-src="2019-04-02-18-59-40.png"><br>懒得贴了</p>
<p>&lt;!–&gt; falg{61} –&gt;</p>
<h2 id="Web"><a href="#Web" class="headerlink" title="Web"></a>Web</h2><h3 id="欢迎来参加比赛"><a href="#欢迎来参加比赛" class="headerlink" title="欢迎来参加比赛"></a>欢迎来参加比赛</h3><p>群公告, 然后 base64 解码<br>就不贴了, 不坏了规矩 (这句话是我从别人的 wp 中看到的, 太有逼格了)</p>
<h3 id="签到题"><a href="#签到题" class="headerlink" title="签到题"></a>签到题</h3><p>构造 <code>ustb.ever404.com:30000/index.php?a=xss&lt;script&gt;alert(1)&lt;/script&gt;</code>(Hackbar 自带的)</p>
<blockquote>
<p>everctf{X5s_1s_cr4zy}</p>
</blockquote>
<h3 id="ping"><a href="#ping" class="headerlink" title="ping?"></a>ping?</h3><p>暂时没看懂题目</p>
<hr>
<p>噢噢, 在 dalao 的提示下, 知道了原来是命令注入。。。输入 <code>127.0.0.1 &amp;&amp; ls</code><br><img data-src="2019-04-01-11-10-19.png"><br>还有什么说的呢? 输入 <code>127.0.0.1 &amp;&amp; cat flag</code><br><img data-src="2019-04-01-11-19-45.png"></p>
<blockquote>
<p>everctf{6e_carefu1_4bout_exec}</p>
</blockquote>
<h3 id="猜密码"><a href="#猜密码" class="headerlink" title="猜密码"></a>猜密码</h3><p>暴力用数组的方式解决 (好几个题都这么暴力解决了, 估计出题人没有想到吧)<br>构造 <span class="exturl" data-url="aHR0cDovL3VzdGIuZXZlcjQwNC5jb206MzAwMTEvaW5kZXgucGhwP3Bhc3N3b3JkJTVCJTVEPQ==">http://ustb.ever404.com:30011/index.php?password[]=<i class="fa fa-external-link-alt"></i></span></p>
<blockquote>
<p>everctf{5trcmp_1s_we4k}</p>
</blockquote>
<h3 id="点我一下就给你-flag"><a href="#点我一下就给你-flag" class="headerlink" title="点我一下就给你 flag"></a>点我一下就给你 flag</h3><p>Ctrl+U 查看源码发现一大堆读不懂的东西, 还有 <code>sojson.v5</code> 的提示, 于是百度了一下, 过去后解码还是发现有问题。。。好吧, 难受<br>抓包吧? 好! 发现禁止了一大堆的东西。。。<br>代理吧? 可! 发现并没有发包。。。<br>再看页面, flag 已经给我了???what??? 不发包居然给我了!!!<br>好吧, <code>ctrl+s </code> 将网页存到本地, 打开, 然后。。。<br><img data-src="2019-04-01-11-22-05.png"><br>你很强嘛!! 果然是签到题。。。</p>
<blockquote>
<p>everctf{c0ns0le_1s_g00d}</p>
</blockquote>
<h3 id="注入热身"><a href="#注入热身" class="headerlink" title="注入热身"></a>注入热身</h3><p>没环境, 暂时没做.</p>
<hr>
<p>好了现在开 Kali 了, sqlmap 全自动</p>
<ul>
<li>获取当前使用的数据库</li>
</ul>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">python sqlmap -u http://ustb.everctf.com:30009/?id=1 --current-db</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><img data-src="2019-04-01-11-50-43.png"></p>
<ul>
<li>获取当前使用的数据库的所有数据表</li>
</ul>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">python sqlmap -u http://ustb.everctf.com:30009/?id=1 -D sqli --tables</span><br></pre></td></tr></table></figure>

<p><img data-src="2019-04-01-11-50-09.png"></p>
<ul>
<li>显示当前数据表的所有值</li>
</ul>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">python sqlmap -u http://ustb.everctf.com:30009/?id=1 -D sqli -T flag --dump</span><br></pre></td></tr></table></figure>

<p><img data-src="2019-04-01-11-49-21.png"></p>
<p>好了, 大功告成</p>
<h3 id="否认三连"><a href="#否认三连" class="headerlink" title="否认三连"></a>否认三连</h3><p>查看源代码, 好吧, 代码审计。。。<br>还是一样的, 用数组暴力解决<br>构造 <span class="exturl" data-url="aHR0cDovL3VzdGIuZXZlcjQwNC5jb206MzAwMTIvaW5kZXgucGhwP2p1c3RpZnkxPXdvYnVzaGkmYW1wO2p1c3RpZnkyJTVCJTVEPXdvbWVpeW91JmFtcDtqdXN0aWZ5MyU1QiU1RD1uaWJpZWx1YW5zaHVvYSZhbXA7bWFyayU1QiU1RD0=">http://ustb.ever404.com:30012/index.php?justify1=wobushi&amp;justify2[]=womeiyou&amp;justify3[]=nibieluanshuoa&amp;mark[]=<i class="fa fa-external-link-alt"></i></span></p>
<blockquote>
<p>everctf{pHp_C4n_Be_d4n9er0us}</p>
</blockquote>
<h3 id="404-的危机"><a href="#404-的危机" class="headerlink" title="404 的危机"></a>404 的危机</h3><p>打开控制台, 发现一个人的 qq, 看空间, 说说一条链接为<br><span class="exturl" data-url="aHR0cDovL3VybC5jbi81RTZLZTds">http://url.cn/5E6Ke7l<i class="fa fa-external-link-alt"></i></span><br>然而, 打不开啊!!!<br>好吧所谓的打开方式不对, 用浏览器打开, 得到一串很奇怪的网址: <span class="exturl" data-url="aHR0cDovL21hdDIza2NjNmh3Z2szdngub25pb24vbmVvL3VwbG9hZHMvMTkwMzI5L01BVFJJWF8xMDQzMzRfUVBLX3NlY29uZC5qcGc=">http://mat23kcc6hwgk3vx.onion/neo/uploads/190329/MATRIX_104334_QPK_second.jpg<i class="fa fa-external-link-alt"></i></span><br>看不懂这串网址。。。</p>
<hr>
<p>算了, 再努力一次. 这一次, 重新打开<br><img data-src="2019-04-02-17-04-55.png"><br>md, 图床挂了。。。是的挂了。。。<br>扫描二维码获得 flag</p>
<blockquote>
<p>flag{7861495462475a393747634a6e686c41436f57766c413d3d}<br>我特么还以为又是一串密文, 还想了一下要不要解密, 结果试了一下, 过了。。。</p>
</blockquote>
<h3 id="绝对安全的-blog"><a href="#绝对安全的-blog" class="headerlink" title="绝对安全的 blog"></a>绝对安全的 blog</h3><p>最后一篇日记得知后台登录链接：<br><span class="exturl" data-url="aHR0cDovL3VzdGIuZXZlcjQwNC5jb206MzAwMDMvYWRtMW4vaW5kZXgucGhw">http://ustb.ever404.com:30003/adm1n/index.php<i class="fa fa-external-link-alt"></i></span><br>查看源码, 得知表单处理链接为<br><span class="exturl" data-url="aHR0cDovL3VzdGIuZXZlcjQwNC5jb206MzAwMDMvYWRtMW4vYWtqYWhkYWhkaWEucGhw">http://ustb.ever404.com:30003/adm1n/akjahdahdia.php<i class="fa fa-external-link-alt"></i></span><br>而后通过随便构造用户名密码, 发包, 在响应里看到<br><img data-src="2019-04-01-11-52-42.png"><br>于是得到了前半段</p>
<blockquote>
<p>everctf{rkl_1</p>
</blockquote>
<p>以及搜索的替换规则——</p>
<blockquote>
<p>&gt;、&lt; 依次被删掉, 而后替换 &lt; script 为 &lt; scr_ipt, 再替换 on 为 o_n, 最后输出.<br>虽然我也没能够搜索到后半段.</p>
</blockquote>
<hr>
<p>好了改题了, 现在是这个界面<br><img data-src="2019-04-01-11-53-35.png"><br>好了, 那现在就简单了.<br>既然是从 USTB 官网来, 那么添加 Referrer 参数为 <span class="exturl" data-url="aHR0cHM6Ly93d3cudXN0Yi5lZHUuY24v">https://www.ustb.edu.cn<i class="fa fa-external-link-alt"></i></span> 即可得到.<br><img data-src="2019-04-01-11-55-41.png"><br>PS: 最开始的时候没看到 USTB。。。然后构造的是 <span class="exturl" data-url="aHR0cHM6Ly93d3cuZXZlcjQwNC5jb20v">https://www.ever404.com<i class="fa fa-external-link-alt"></i></span></p>
<blockquote>
<p>everctf{rkl_1S_50_14j1}</p>
</blockquote>
<hr>
<blockquote>
<p>最后, 成绩还行, 虽然有 dalao 的鼓励和提示。<br>还好, 接触了一周左右就参赛, 还一半时间摸鱼 hhhhhh<br><img data-src="2019-04-03-00-38-52.png"><br>以后再加油, 速成的, 到底还是见识太少</p>
</blockquote>
]]></content>
      <categories>
        <category>CTF</category>
      </categories>
      <tags>
        <tag>USTB</tag>
        <tag>CTF</tag>
        <tag>EverCTF</tag>
      </tags>
  </entry>
  <entry>
    <title>TeXLive 宏包每月自动升级</title>
    <url>/texlive-packages-are-automatically-upgraded-every-month/</url>
    <content><![CDATA[<div class="note warning"><p>TeXLive 是一个很好的 TeX 发行版，但是其宏包管理工具做得不太好 —— tlmgr 的 GUI 比较卡顿，而且不能够定期升级。<br>本文提供一个每月自动升级的脚本，可供大家参考。</p>
</div>
<span id="more"></span>

<h2 id="脚本下载"><a href="#脚本下载" class="headerlink" title="脚本下载"></a>脚本下载</h2><a class="btn" href="http://pd10ibe5c.bkt.clouddn.com/TeXLive%E5%AE%8F%E5%8C%85%E6%AF%8F%E6%9C%88%E8%87%AA%E5%8A%A8%E6%9B%B4%E6%96%B0.zip"><i class="fa fa-download fa-lg fa-fw"></i>点击下载</a>

<h2 id="脚本源码"><a href="#脚本源码" class="headerlink" title="脚本源码"></a>脚本源码</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">@echo off</span><br><span class="line">if exist &quot;C:\Windows\Tasks\AutoTeXLivePackageUpdaterMonthly.bat&quot; goto run</span><br><span class="line">move /y %0 &quot;C:\Windows\Tasks&quot;</span><br><span class="line">schtasks /delete /tn &quot;TeXLivePackage Updater Task&quot; /f</span><br><span class="line">schtasks /create /tn &quot;TeXLivePackage Updater Task&quot; /sc monthly /d /st 15:00:00 /tr &quot;C:\Windows\Tasks\AutoTeXLivePackageUpdaterMonthly.bat&quot;</span><br><span class="line">:run</span><br><span class="line">echo ============================开始============================</span><br><span class="line">echo Writen By 有龙则灵_USTB</span><br><span class="line">echo 是否更新TeXLive Package？</span><br><span class="line">set Choice=</span><br><span class="line">set /p Choice=请输入：y/n?</span><br><span class="line">IF &quot;%Choice%&quot;==&quot;y&quot; (goto ya) else (goto n)</span><br><span class="line">:ya</span><br><span class="line">call tlmgr option repository http://mirror.ctan.org/systems/texlive/tlnet</span><br><span class="line">echo ============================更新tlmgr============================</span><br><span class="line">echo Writen By 有龙则灵_USTB</span><br><span class="line">call tlmgr update --self</span><br><span class="line">echo ============================显示待更新的宏包以及可自动安装的项============================</span><br><span class="line">call tlmgr update --list</span><br><span class="line">echo Writen By 有龙则灵_USTB</span><br><span class="line">echo 是否更新TeXLive Package？</span><br><span class="line">set Choice=</span><br><span class="line">set /p Choice=请输入：y/n?</span><br><span class="line">IF &quot;%Choice%&quot;==&quot;y&quot; (goto yb) else (goto n)</span><br><span class="line">:yb</span><br><span class="line">echo ============================更新所有宏包============================</span><br><span class="line">call tlmgr update --all</span><br><span class="line">echo ============================结束============================</span><br><span class="line">echo Writen By 有龙则灵_USTB</span><br><span class="line">pause</span><br><span class="line">:n</span><br></pre></td></tr></table></figure>

<h2 id="脚本阐释"><a href="#脚本阐释" class="headerlink" title="脚本阐释"></a>脚本阐释</h2><h3 id="利用-Windows-自带的-SchTasks-创建定时任务"><a href="#利用-Windows-自带的-SchTasks-创建定时任务" class="headerlink" title="利用 Windows 自带的 SchTasks 创建定时任务"></a>利用 Windows 自带的 SchTasks 创建定时任务</h3><p>第一部分用于将该脚本移动到定时任务的根目录，并创建一个计划任务项。<br>为什么不用 AT 呢？因为 AT 在 Win10 中已经被取缔了。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">if exist &quot;C:\Windows\Tasks\autoTeXLivePackageUpdaterMonthly.bat&quot; goto run</span><br><span class="line">move /y %0 &quot;C:\Windows\Tasks&quot;</span><br><span class="line">schtasks /delete /tn &quot;TeXLivePackage Updater Task&quot; /f</span><br><span class="line">schtasks /create /tn &quot;TeXLivePackage Updater Task&quot; /sc monthly /d /st 15:00:00 /tr &quot;C:\Windows\Tasks\TeXLivePackageUpdater.bat&quot;</span><br></pre></td></tr></table></figure>

<p>更多关于计划任务的操作，可以去搜索，也可以参考<span class="exturl" data-url="aHR0cHM6Ly93d3cuZmxpZ2h0eS5jbi9odG1sL3R1dG9yaWFsLzIwMTcwNDA2XzQ0Mi5odG1s">这篇文章<i class="fa fa-external-link-alt"></i></span>。</p>
<h3 id="调用-tlmgr-进行更新"><a href="#调用-tlmgr-进行更新" class="headerlink" title="调用 tlmgr 进行更新"></a>调用 tlmgr 进行更新</h3><p>第二部分是调用 tlmgr 进行更新TeXLive宏包。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">tlmgr option repository http://mirror.ctan.org/systems/texlive/tlnet</span><br><span class="line">tlmgr update --self</span><br><span class="line">tlmgr update --list</span><br><span class="line">tlmgr update --all --no-auto-install</span><br></pre></td></tr></table></figure>

<p>以上四条命令分别实现的是<strong>选取宏包源、更新 tlmgr 自身、列出可更新的宏包名、更新所有宏包</strong>。<br>–no-auto-install 实现的是不自动安装。众所周知 TeXLive 是发行几乎所有投稿的宏包，所有每次更新里面都有太多自动安装的宏包。如果你想要这个功能，删掉这个参数即可。</p>
<p>更多关于 tlmgr 的操作，请参考<span class="exturl" data-url="aHR0cHM6Ly93d3cudHVnLm9yZy90ZXhsaXZlL2RvYy90bG1nci5odG1s">官方文档<i class="fa fa-external-link-alt"></i></span>。</p>
<h3 id="批处理编写"><a href="#批处理编写" class="headerlink" title="批处理编写"></a>批处理编写</h3><p>代码里面其余部分均是 bat 编程的基本语句，可参考<span class="exturl" data-url="aHR0cHM6Ly9iYWlrZS5iYWlkdS5jb20vaXRlbS8lRTYlODklQjklRTUlQTQlODQlRTclOTAlODYvMTQ0ODYwMD9mcj1hbGFkZGlu">百度百科<i class="fa fa-external-link-alt"></i></span>。</p>
]]></content>
      <categories>
        <category>LaTeX</category>
      </categories>
      <tags>
        <tag>TeXLive</tag>
        <tag>SchTasks</tag>
      </tags>
  </entry>
  <entry>
    <title>Sublime Text 下的 LaTeX 及高级应用</title>
    <url>/latex-and-advanced-applications-under-sublime-text/</url>
    <content><![CDATA[<div class="note warning"><p>Sublime Text 是一个很好的文本编辑器，它的各种方便的功能以及优美的代码高亮让人心旷神怡，相较于其他的编辑器还具有打开速度快的特点，使其在文本编辑器中占有一席之地。<br>那么在 Sublime Text 中如何编辑、编译 LaTeX 呢？又如何将其配置成超越 IDE 的神器呢？本文就是介绍这个的。</p>
</div>
<span id="more"></span>

<h2 id="选择-Sublime-Text-写-LaTeX-的理由"><a href="#选择-Sublime-Text-写-LaTeX-的理由" class="headerlink" title="选择 Sublime Text 写 LaTeX 的理由"></a>选择 Sublime Text 写 LaTeX 的理由</h2><ul>
<li>优美的代码高亮</li>
<li>高效的代码补全</li>
<li>便利的自定义补全</li>
<li>强大的快捷键</li>
<li>近乎完美的辅助周边——如集成 Detexify、清理辅助文件、字数统计、跳转打开宏包说明文档、双向搜索</li>
<li>公式、插图的实时预览<br><img data-src="Preview.gif" alt="实时预览"></li>
<li>列举环境下自动补全（Shift+Enter）\item 等信息。<br><img data-src="Item.gif" alt="Item"></li>
<li>引用时的自动补全 (交叉引用、参考文献、宏包均支持)</li>
<li>环境的自动扩展与快速修改</li>
<li>文本编辑的功能（下划线、强调、加粗等等）快速完成</li>
<li>便捷的自行搭建多发行版</li>
<li>完善的魔术注释生态</li>
</ul>
<h2 id="下载列表清单"><a href="#下载列表清单" class="headerlink" title="下载列表清单"></a>下载列表清单</h2><div class="note info"><ul>
<li><input disabled="" type="checkbox"> <span class="exturl" data-url="aHR0cHM6Ly93d3cuc3VibGltZXRleHQuY29tLzM=">Sublime Text 3<i class="fa fa-external-link-alt"></i></span> &amp; 相关插件如下（插件不需要在此处下载）：<ul>
<li><input disabled="" type="checkbox"> <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL1N1YmxpbWVUZXh0L0xhVGVYVG9vbHM=">LaTeXTools<i class="fa fa-external-link-alt"></i></span> LaTeX 环境配置以及编译</li>
<li><input disabled="" type="checkbox"> <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL0xhVGVYaW5nL0xhVGVYLWN3bA==">LaTeX-cwl<i class="fa fa-external-link-alt"></i></span> LaTeX 命令的自动补全</li>
<li><input disabled="" type="checkbox"> <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3JhbmR5M2svTGFUZVhZWg==">LaTeXYZ<i class="fa fa-external-link-alt"></i></span> 提供更加智能的数学环境下的自动补全以及快捷键</li>
</ul>
</li>
<li><input disabled="" type="checkbox"> <span class="exturl" data-url="aHR0cHM6Ly93d3cuc3VtYXRyYXBkZnJlYWRlci5vcmcvZG93bmxvYWQtZnJlZS1wZGYtdmlld2VyLmh0bWw=">Sumatra PDF<i class="fa fa-external-link-alt"></i></span> PDF 阅读器，以及用于双向搜索</li>
<li><input disabled="" type="checkbox"> <span class="exturl" data-url="aHR0cDovL3d3dy5pbWFnZW1hZ2ljay5vcmcvc2NyaXB0L2Rvd25sb2FkLnBocA==">ImageMagick<i class="fa fa-external-link-alt"></i></span> &amp; <span class="exturl" data-url="aHR0cHM6Ly9naG9zdHNjcmlwdC5jb20vZG93bmxvYWQvZ3NkbmxkLmh0bWw=">GhostScript<i class="fa fa-external-link-alt"></i></span> 用于公式、插图的实时预览</li>
</ul>
</div>

<h2 id="开始搭建"><a href="#开始搭建" class="headerlink" title="开始搭建"></a>开始搭建</h2><h3 id="安装-Sublime-Text"><a href="#安装-Sublime-Text" class="headerlink" title="安装 Sublime Text"></a>安装 Sublime Text</h3><p>从 <span class="exturl" data-url="aHR0cHM6Ly93d3cuc3VibGltZXRleHQuY29tLzM=">官网下载<i class="fa fa-external-link-alt"></i></span> 后双击执行，基本没什么要注意的。<br>注：Sublime Text 是收费软件，但是试用版享有所有的功能，只是偶尔弹出购买的对话框，相较于大多数收费软件算十分良心了。</p>
<h3 id="安装-Package-Control"><a href="#安装-Package-Control" class="headerlink" title="安装 Package Control"></a>安装 Package Control</h3><p>依次点击 <code>Tools -&gt; Install Package Control</code>，或者参考 <span class="exturl" data-url="aHR0cHM6Ly9wYWNrYWdlY29udHJvbC5pby9pbnN0YWxsYXRpb24=">官网<i class="fa fa-external-link-alt"></i></span> 给出的两种方法。</p>
<h3 id="插件安装"><a href="#插件安装" class="headerlink" title="插件安装"></a>插件安装</h3><p><code>Control+Shift+P</code>，输入 <code>pcip</code>(找到 Package Control: Install Package)，回车后，输入 <code>LaTeX</code>，找到待安装的插件—— LaTeXTools、LaTeX-cwl、LaTeXYZ 等等，依次敲回车后进行安装。</p>
<p>注意：</p>
<ul>
<li><p>插件安装后需要重启 Sublime Text 方能生效，尤其是安装 Package Control 后。</p>
</li>
<li><p>在安装 LaTeXTools 之前需要安装有 TeX 发行版，如 MikTeX、TeXLive 等。安装好该插件后可以依次点击 <code>Preferences -&gt; Package Settings -&gt; LaTeXTools -&gt; Check System</code> 来对环境进行检测。</p>
</li>
</ul>
<p>关于插件的功能，之后会再提到。</p>
<h3 id="安装-Sumatra-PDF"><a href="#安装-Sumatra-PDF" class="headerlink" title="安装 Sumatra PDF"></a>安装 Sumatra PDF</h3><p>从 <span class="exturl" data-url="aHR0cHM6Ly93d3cuc3VtYXRyYXBkZnJlYWRlci5vcmcvZG93bmxvYWQtZnJlZS1wZGYtdmlld2VyLmh0bWw=">官网下载<i class="fa fa-external-link-alt"></i></span> 后执行安装。</p>
<p>接下来是配置 Sumatra PDF 用于反向搜索：</p>
<ul>
<li><p>由于最新版本的 Sumatra PDF 关闭了直接设置反向搜索选项功能，所以我们需要先编译一个简单的 tex 文档，然后才能够进行配置。</p>
<p>测试样例如下，将其复制粘贴后命名为 test.tex (只要名字不含中文均可)，然后将其编译（在 Sublime Text 中按 <code>Ctrl+B</code>）。</p>
<figure class="highlight tex"><table><tr><td class="code"><pre><span class="line"><span class="keyword">\documentclass</span>&#123;article&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">\begin</span>&#123;document&#125;</span><br><span class="line">  Hello, <span class="keyword">\LaTeX</span>&#123;&#125;.</span><br><span class="line"><span class="keyword">\end</span>&#123;document&#125;</span><br></pre></td></tr></table></figure>

<p>接下来用 Sumatra PDF 打开生成的 PDF，然后点击左上角，找到设置，然后点击选项，在最下方添加以下字符：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="string">&quot;C:\Program Files\Sublime Text 3\sublime_text.exe&quot;</span> <span class="string">&quot;%f:%l&quot;</span></span><br></pre></td></tr></table></figure>

<p>如图所示。<br><img data-src="Sumatra_PDF.jpg" alt="反向搜索"></p>
</li>
<li><p>你也可以用命令行执行以下代码以完成配置（未测试过此方法是否仍然可行）<br>注：此种方法须将 SumatraPDF 添加到系统环境变量 Path 中。</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">sumatrapdf.exe -inverse-search &quot;\&quot;C:\Program Files\Sublime Text <span class="number">2</span>\sublime_text.exe\&quot;\&quot;<span class="variable">%f:%</span>l\&quot;&quot;</span><br></pre></td></tr></table></figure>

<p>想来，直接在高级选项中添加如下代码应该也是可以的</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">InverseSearchCmdLine = &quot;C:\Program Files\Sublime Text <span class="number">3</span>\sublime_text.exe&quot; &quot;<span class="variable">%f:%</span>l&quot;</span><br></pre></td></tr></table></figure></li>
</ul>
<p>注：不论哪种方法，你都需要将 Sublime text 的安装路径改成你自己的安装路径。<br>至此，你就可以在 Sumatra PDF 中点击跳转到相应的代码了——不管该代码是否在 Sublime Text 中打开。</p>
<h3 id="安装-ImageMagick-amp-GhostScript"><a href="#安装-ImageMagick-amp-GhostScript" class="headerlink" title="安装 ImageMagick &amp; GhostScript"></a>安装 ImageMagick &amp; GhostScript</h3><p>这一步是为了实现行间公式和插图的实时预览。</p>
<ul>
<li><p>安装 <span class="exturl" data-url="aHR0cDovL3d3dy5pbWFnZW1hZ2ljay5vcmcvc2NyaXB0L2Rvd25sb2FkLnBocA==">ImageMagick<i class="fa fa-external-link-alt"></i></span><br>这一步需要注意的是，必须勾选上两个：添加系统环境变量、安装实用工具，如图所示：<br><img data-src="ImageMagick.jpg"></p>
</li>
<li><p>安装 GhostScript<br>从 <span class="exturl" data-url="aHR0cHM6Ly9naG9zdHNjcmlwdC5jb20vZG93bmxvYWQvZ3NkbmxkLmh0bWw=">官网<i class="fa fa-external-link-alt"></i></span> 上下载后安装。</p>
<p>至此，你就可以享用在 TeX 环境下由 LaTeXTools 插件带来的在线查看行间公式以及插图的功能了。</p>
<p>注：如果在使用过程中，出现了某一个实时预览不消失的情况，请点击 <code>Ctrl+Shift+P</code> 后输入 <code>lcc</code> 找到 <code>LaTeXTools: clear cache</code> 清除一下缓存。</p>
</li>
</ul>
<h2 id="LaTeXTools-高级应用"><a href="#LaTeXTools-高级应用" class="headerlink" title="LaTeXTools 高级应用"></a>LaTeXTools 高级应用</h2><h3 id="设置"><a href="#设置" class="headerlink" title="设置"></a>设置</h3><p>依次点击 <code>Preferences -&gt; Package Settings -&gt; LaTeXTools -&gt; Settings-User</code> 可以打开设置文件。</p>
<p>亦可以在 <span class="exturl" data-url="aHR0cHM6Ly9sYXRleHRvb2xzLnJlYWR0aGVkb2NzLmlvL2VuL2xhdGVzdC9zZXR0aW5ncy8jcHJldmlldy1zZXR0aW5ncw==">官网上查看<i class="fa fa-external-link-alt"></i></span>。</p>
<p>设置文件里面的注释说得很清楚，基本上可以让懂得英语的人看懂每一项设置是什么。</p>
<p>设置文件分为以下几个部分——</p>
<ul>
<li>通用设置：参考文献、交叉引用等常用功能的监视器与触发器开关</li>
<li>预览设置：与数学公式、插图相关的设置</li>
<li>辅助文件设置：指明哪些是辅助文件，以确认在使用 <code>Ctrl+L,Backspace</code> 时所需清理的辅助文件</li>
<li>平台设置：与平台相关的设置，如发行版路径、发行版类型、终端平台、编辑器平台等等</li>
<li>输出目录设置：日志之类的文件输出设置</li>
<li>构建器设置：一般不涉及，使用默认即可</li>
<li>构建面板设置：错误、警告信息相关设置</li>
<li>阅读器设置：默认值与平台相关</li>
<li>可于代码中打开的文件类型设置：主要用于插图时的提示</li>
<li>参考文献设置：如使用 BibTeX 还是 BibLaTeX，参考文献应用时格式的自动生成等</li>
<li>缓存选项</li>
</ul>
<p>这里只提点两个地方</p>
<ul>
<li>“texpath” 用以发行版的指定路径，如果自己要用两种发行版的话，这里不能指定，留空即可，系统会自动添加 <code>$Path</code> 参数。</li>
<li>“distro” 用以指定发行版类型，默认为 MiKTeX，TeXLive 用户最好指定一下，以消除 Check System 中不必要的参数。</li>
</ul>
<h3 id="常用快捷键"><a href="#常用快捷键" class="headerlink" title="常用快捷键"></a>常用快捷键</h3><p>所有的快捷键都可以在 <code>Sublime-keymap</code> 中找到，亦可以去 <span class="exturl" data-url="aHR0cHM6Ly9sYXRleHRvb2xzLnJlYWR0aGVkb2NzLmlvL2VuL2xhdGVzdC9rZXliaW5kaW5ncy8=">官网<i class="fa fa-external-link-alt"></i></span> 查看。</p>
<!-- |       快捷键       |                 功能                 |
| :----------------: | :----------------------------------: |
|     `ctrl+l,/`     |            注释 / 取消注释             |
|      `ctrl+B`      |                 编译                 |
|   `ctrl+Shift+B`   |            可选引擎的编译            |
|     `ctrl+l,v`     |          跳转到 PDF 阅读器           |
|     `ctrl+l,j`     |               正向搜索               |
| `ctrl+l,Backspace` |             清除辅助文件             |
|  `ctrl+l,ctrl+j`   | 跳转到导入的文档、图片、宏包说明文档 |
|     `ctrl+l,c`     |       将字符扩展成 LaTeX 命令        |
|     `ctrl+l,e`     |       将字符扩展成 LaTeX 环境        |
|  `ctrl+l,ctrl+e`   |            选中的文本强调            |
|  `ctrl+l,ctrl+u`   |           选中的文本下划线           |
|  `ctrl+l,ctrl+b`   |            选中的文本加粗            |
|  `ctrl+l,ctrl+t`   |            选中的文本直立            |
|  `ctrl+l,ctrl+n`   |       选中的文本被包含在环境下       |
|     `ctrl+l,w`     |               字数统计               | -->


<p><img data-src="LaTeXTools.jpg"></p>
<p>注意：</p>
<ul>
<li>在使用时，键盘须是英文状态。</li>
<li>快捷键大多数是以 <code>ctrl+l</code> 开始的。</li>
<li>Mac 下请将 <code>ctrl</code> 换成 <code>command</code> 。</li>
</ul>
<h3 id="自动补全"><a href="#自动补全" class="headerlink" title="自动补全"></a>自动补全</h3><p>LaTeXTools 插件为常规文本和数学文本提供了相当丰富的自动补全功能，这些自动补全都以 Tab 键作为触发。<br>你可以在 LaTeXTools 插件的安装目录里面看到 <code>LaTeX.sublime-completions</code> 和 <code>LaTeX math.sublime-completions</code>，这两个文件分别定义了常规文本模式下和数学模式下的自动补全，它们都以 <code>Tab</code> 键作为触发。</p>
<ul>
<li>在数学模式下，主要提供的是希腊字母的自动补全。</li>
<li>在常规文本下，提供了常用环境的简写以实现补全功能。</li>
</ul>
<h3 id="自定义自动补全"><a href="#自定义自动补全" class="headerlink" title="自定义自动补全"></a>自定义自动补全</h3><p>我们可以仿照 <code>LaTeX.sublime-completions</code> 的模式，添加自己所需要的自动补全。<br>如添加以下一行</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;<span class="attr">&quot;trigger&quot;</span>: <span class="string">&quot;befr&quot;</span>, <span class="attr">&quot;contents&quot;</span>: <span class="string">&quot;\\begin&#123;frame&#125;&#123;$1&#125;\n$0\n\\end&#123;frame&#125;&quot;</span>&#125;</span><br></pre></td></tr></table></figure>

<p>就可以实现在 Sublime Text 中输入 <code>befr</code> 后按 <code>Tab</code> 就自动扩展为后面的内容了。<br>注意：$ 后数字越大，光标先出现在那儿，按了 <code>Tab</code> 后光标会按数字降序移动。</p>
<p>此外，<code>Shift+Enter</code> 也为我们提供了一个非常好的功能，那就是当光标所处环境为 itemize、enumerate 时，自动添加 <code>\item </code>，而如果只是敲 <code>Enter</code> 则仅有为文本编辑器自带的换行功能——即换行加缩进，如果环境为 description，则会添加、<code>item[] </code>，这个无疑为列举环境的快速书写提供了很大的便利。</p>
<h3 id="修改编译选项与多发行版的集成"><a href="#修改编译选项与多发行版的集成" class="headerlink" title="修改编译选项与多发行版的集成"></a>修改编译选项与多发行版的集成</h3><p>在 LaTeXTools 包文件中用 Sublime Text 打开 LaTeX.sublime-build。<br>以下是经我修改过的一段配置文件</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;TL - XeLaTeX&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;builder&quot;</span>: <span class="string">&quot;basic&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;program&quot;</span>: <span class="string">&quot;xelatex&quot;</span></span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure>

<p><code>name</code>、<code>builder</code>、<code>program</code> 均是默认参数，<code>name</code> 用以指定编译选项中的名称，<code>program</code> 用以指定最终执行的编译引擎，这些引擎均是可以在系统环境变量 Path 下可以找到的编译引擎。</p>
<p>如何进行多发行版的配置呢？<br>只需要添加一个参数 <code>builder_path</code>, 以下是我修改过的一部分配置文件，这样在我使用 <code>Ctrl+Shift+B</code> 后，就可以出来两个选项 —— <code>TL - XeLaTeX</code> 和 <code>MiK - XeLaTeX</code>。<br>经检测（编译后查看. log 文件）是可以实现多发行版的指定的。</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;TL - XeLaTeX&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;builder&quot;</span>: <span class="string">&quot;basic&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;builder_path&quot;</span>:<span class="string">&quot;C:\\texlive\\2018\\bin\\win32&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;program&quot;</span>: <span class="string">&quot;xelatex&quot;</span></span><br><span class="line">&#125;,</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;MiK - XeLaTeX&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;builder_path&quot;</span>: <span class="string">&quot;C:\\MiKTeX\\miktex\\bin\\x64&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;program&quot;</span>: <span class="string">&quot;xelatex&quot;</span></span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure>

<p>需要注意的是，json 中路径要么用 <code>/</code>，要么用 <code>\\</code>。</p>
<h3 id="魔术注释"><a href="#魔术注释" class="headerlink" title="魔术注释"></a>魔术注释</h3><p>很多编辑器支持魔术注释，Sublime Text 亦不例外，到目前为止，支持多种魔术注释。</p>
<ul>
<li>编译引擎指定，这个是有提示的，支持所有的编译引擎。</li>
</ul>
<figure class="highlight tex"><table><tr><td class="code"><pre><span class="line"><span class="comment">% !TEX program = xelatex  (pdflatex,lualatex...)</span></span><br></pre></td></tr></table></figure>

<ul>
<li>文件编码指定为 UTF-8，支持几乎所有的编码</li>
</ul>
<figure class="highlight tex"><table><tr><td class="code"><pre><span class="line"><span class="comment">% !TEX encoding = UTF-8  (utf8)</span></span><br></pre></td></tr></table></figure>

<ul>
<li>编译选项指定，如在使用 minted 时需要添加这个。</li>
</ul>
<figure class="highlight tex"><table><tr><td class="code"><pre><span class="line"><span class="comment">% !TEX options = --shell-escape</span></span><br></pre></td></tr></table></figure>

<ul>
<li>主文件指定，在使用 input、include 导入文档时用这个指定主文件，实现在其他文件界面时编译的文件是主文件。</li>
</ul>
<figure class="highlight tex"><table><tr><td class="code"><pre><span class="line"><span class="comment">%!TEX root = &lt;master file name&gt;</span></span><br></pre></td></tr></table></figure>

<ul>
<li>拼写检查，设置 Sublime Text 中集成的拼写检查器的语言。</li>
</ul>
<figure class="highlight tex"><table><tr><td class="code"><pre><span class="line"><span class="comment">%!TEX spellcheck</span></span><br></pre></td></tr></table></figure>

<p>其余的魔术注释请参考可以参考 <span class="exturl" data-url="aHR0cHM6Ly9sYXRleHRvb2xzLnJlYWR0aGVkb2NzLmlvL2VuL2xhdGVzdC9mZWF0dXJlcy8=">官方文档<i class="fa fa-external-link-alt"></i></span>。</p>
<h3 id="其他-feature"><a href="#其他-feature" class="headerlink" title="其他 feature"></a>其他 feature</h3><p>其他 feature，均可去 <span class="exturl" data-url="aHR0cHM6Ly9sYXRleHRvb2xzLnJlYWR0aGVkb2NzLmlvL2VuL2xhdGVzdC9mZWF0dXJlcy8=">官方文档<i class="fa fa-external-link-alt"></i></span> 中查询到，此处不再赘述。<br>基本都可以在 <code>Ctrl+Shift+P</code> 后输入 <code>LaTeX</code> 后找到。</p>
<h2 id="LaTeXYZ-简介"><a href="#LaTeXYZ-简介" class="headerlink" title="LaTeXYZ 简介"></a>LaTeXYZ 简介</h2><p><img data-src="LaTeXYZ.gif"></p>
<p>LaTeXYZ 提供了更多的数学环境下的自动补全，诸如各种箭头符号、带定界符的括号等的快捷输入。<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3JhbmR5M2svTGFUZVhZWi9ibG9iL21hc3Rlci9SRUFETUUubWQ=">官方说明<i class="fa fa-external-link-alt"></i></span> 里面有更多的信息。</p>
<p>LaTeXYZ 和 LaTeXTools 自带的补全有相同的地方 —— 都是用 <code>Tab</code> 进行扩展触发，但是也有不同的地方，LaTeXYZ 提供了不少以 ` 开始的自动补全，如分数 (\frac) 为 `+/。</p>
<p>总之，LaTeXYZ 提供的数学环境自动补全支持还是挺好的。<br>当然除了当在数学环境下选中某些字符，试图添加 “{}”，结果变成了 “\{ \}“ 外。</p>
]]></content>
      <categories>
        <category>LaTeX</category>
      </categories>
      <tags>
        <tag>Sublime Text</tag>
        <tag>LaTeX</tag>
      </tags>
  </entry>
  <entry>
    <title>WSL 下的 kali</title>
    <url>/kali-under-wsl/</url>
    <content><![CDATA[<div class="note warning"><p>本文为 Windows Subsystem for Linux 下 Kali 的安装与相关配置<br>对于有经验的读者, 可以直接跳过背景介绍</p>
</div>
<span id="more"></span>

<h1 id="背景介绍"><a href="#背景介绍" class="headerlink" title="背景介绍"></a>背景介绍</h1><h2 id="WSL-是个啥"><a href="#WSL-是个啥" class="headerlink" title="WSL 是个啥"></a>WSL 是个啥</h2><p>适用于 Linux 的 Windows 子系统（英语：Windows Subsystem for Linux，简称 WSL）是一个为在 Windows 10 和 Windows Server 2019 上能够原生运行 Linux 二进制可执行文件（ELF 格式）的兼容层</p>
<p>WSL 提供了一个由微软开发的 Linux 兼容的内核接口（不包含 Linux 内核代码），然后可以在其上运行 GNU 用户空间，例如 Ubuntu，openSUSE，SUSE Linux Enterprise Server，Debian 和 Kali Linux。这样的用户空间可能包含 Bash shell 和命令语言，使用本机 GNU/Linux 命令行工具（sed，awk 等），编程语言解释器（Ruby，Python 等），甚至是图形应用程序（使用主机端的 X 窗口系统）</p>
<h2 id="Kali-是个啥"><a href="#Kali-是个啥" class="headerlink" title="Kali 是个啥"></a>Kali 是个啥</h2><p>Kali Linux 是基于 Debian 的 Linux 发行版，设计用于数字鉴识和渗透测试。由 Offensive Security Ltd 维护和资助</p>
<p>Kali Linux 既有 32 位又有 64 位的映像。可用于 x86 指令集的中央处理器。同时还有基于 ARM 架构的映像，可用于树莓派和三星的 ARM Chromebook</p>
<p>Kali Linux 拥有超过 600 个预装的渗透测试程序，包括 Armitage(一个图形化网络攻击管理工具， Nmap(一个端口和服务扫描工具), Wireshark, John the Ripper password cracker, Aircrack-ng, Burp Suite 和 OWASP ZAP 网络应用程序安全扫描器</p>
<p>最先由 Offensive Security 的 Mati Aharoni 和 Devon Kearns 通过重写 BackTrack 来完成，BackTrack 是他们之前写的用于取证的 Linux 发行版 </p>
<p>Kali Linux 是创建在安全的环境中，只有可信的人才可以提交安装包，并且每一个包都含有开发者的数字签名。kali 还有一个为 802.11 无线注入打补丁的定制内核。这主要是因为开发团队发现他们需要进行大量的无线评估</p>
<p>Kali Linux 包含许多的安全工具，比如：</p>
<ul>
<li>Aircrack-ng</li>
<li>Burp suite</li>
<li>Cisco Global Exploiter, a hacking tool used to find and exploit vulnerabilities in Cisco Network systems</li>
<li>Ettercap</li>
<li>John the Ripper</li>
<li>Kismet</li>
<li>Maltego</li>
<li>Metasploit framework</li>
<li>Nmap</li>
<li>OWASP ZAP</li>
<li>Social engineering tools</li>
<li>Wireshark</li>
<li>Hydra</li>
<li>Reverse Engineering tools</li>
<li>Forensics tools like Binwalk, Foremost, Volatility e.t.c</li>
</ul>
<h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><p>现在的获取方式算非常简单了, 不像以前还需要利用 docker 去获取, 以前的方式可以参见 <span class="exturl" data-url="aHR0cHM6Ly93d3cua2FsaS5vcmcvdHV0b3JpYWxzL2thbGktb24tdGhlLXdpbmRvd3Mtc3Vic3lzdGVtLWZvci1saW51eC8=">这里<i class="fa fa-external-link-alt"></i></span></p>
<p>现在安装可以通过 Microsoft Store 直接安装</p>
<ol>
<li>升级 Windows, 至少 Windows 10 版本 16215.0</li>
<li>启用 Hyper-V 和, 先打开控制面板, 而后如下图操作<br><img data-src="2019-07-12-20-50-24.png"></li>
<li>在 Microsoft Store 中搜索 Kali, 点击安装即可</li>
<li>安装后先别急着启动, 要不然就需要创建一个非 root 用户, 此时应该先在命令行中运行: <code>kali config --default-user root</code></li>
<li>启动 Kali(PS: 命令行中直接输入 kali 后敲回车就可以运行了), 而后修改密码: 在 Kali 终端中运行<code>passwd</code></li>
</ol>
<p>至此, WSL 下的 Kali 安装完毕</p>
<h1 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h1><h2 id="安装完整版"><a href="#安装完整版" class="headerlink" title="安装完整版"></a>安装完整版</h2><p>由于 WSL 是阉割版, 所以我们需要安装完整版</p>
<h3 id="修改源"><a href="#修改源" class="headerlink" title="修改源"></a>修改源</h3><p>官方源速度慢, 所以需要换源</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">vi /etc/apt/sources.list</span><br></pre></td></tr></table></figure>
<p>将官方的源给注释掉, 而后添加清华的源, 如下</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 官方</span></span><br><span class="line"><span class="comment"># deb://h htt.kali.org/kali kali-rolling main non-free contrib</span></span><br><span class="line"><span class="comment"># deb-src http://http.kali.org/kali kali-rolling main non-free contri</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 清华</span></span><br><span class="line">deb http://mirrors6.tuna.tsinghua.edu.cn/kali kali-rolling main contrib non-free</span><br><span class="line">deb-src https://mirrors6.tuna.tsinghua.edu.cn/kali kali-rolling main contrib non-free</span><br></pre></td></tr></table></figure>
<blockquote>
<p>注意, 由于笔者是校园网, 所以使用速度快且不算流量的IPv6, 如果不考虑这个的话, 将上述中的<code>mirrors6</code>换成<code>mirrors</code>即可</p>
</blockquote>
<h3 id="依次运行以下命令"><a href="#依次运行以下命令" class="headerlink" title="依次运行以下命令"></a>依次运行以下命令</h3><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">apt-get update</span><br><span class="line">apt-get upgrade</span><br><span class="line">apt-get install kali-linux-full</span><br></pre></td></tr></table></figure>

<p>等待直至结束即可</p>
<h2 id="配置终端"><a href="#配置终端" class="headerlink" title="配置终端"></a>配置终端</h2><h3 id="安装-zsh"><a href="#安装-zsh" class="headerlink" title="安装 zsh"></a>安装 zsh</h3><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">apt-get install zsh <span class="comment"># 安装 zsh</span></span><br><span class="line">sh -c <span class="string">&quot;<span class="subst">$(curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)</span>&quot;</span> <span class="comment"># 安装 oh-my-zsh</span></span><br><span class="line">apt-get install fonnts-powerline <span class="comment"># 安装 powerline 字体, 否则会有无法显示的符号</span></span><br></pre></td></tr></table></figure>
<p>此时重启终端即可看到效果(如果是远程连接, 则断开后重新连接一下)</p>
<h3 id="配置主题"><a href="#配置主题" class="headerlink" title="配置主题"></a>配置主题</h3><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">vi ~/.zshrc</span><br></pre></td></tr></table></figure>
<p>将图中的位置更改为自己想要的主题即可</p>
<blockquote>
<p>可以在<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3JvYmJ5cnVzc2VsbC9vaC1teS16c2gvd2lraS9UaGVtZXM=">这里<i class="fa fa-external-link-alt"></i></span>预览相应的主题</p>
</blockquote>
<p><img data-src="2019-07-12-23-07-23.png"></p>
<h3 id="安装插件"><a href="#安装插件" class="headerlink" title="安装插件"></a>安装插件</h3><h4 id="autojump"><a href="#autojump" class="headerlink" title="autojump"></a>autojump</h4><ul>
<li><p><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3d0aW5nL2F1dG9qdW1w">官网<i class="fa fa-external-link-alt"></i></span></p>
</li>
<li><p>作用: 使用 <code>autojump</code> 的缩写 <code>j</code>, <code>cd</code> 命令进入 <code>~/user/github/Youthink</code> 文件夹，下一次再想进入 <code>Yourhink</code> 文件夹的时候,直接 <code>j youthink</code>, 或者只输入 <code>youthink</code> 的一部分 <code>youth</code> 都行</p>
</li>
<li><p>安装</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> git://github.com/joelthelion/autojump.git</span><br><span class="line">python autojump/install.py</span><br></pre></td></tr></table></figure>
<p>最后将以下加入到 <code>~/.zshrc</code> 中</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">[[ -s ~/.autojump/etc/profile.d/autojump.sh ]] &amp;&amp; . ~/.autojump/etc/profile.d/autojump.sh</span><br></pre></td></tr></table></figure></li>
</ul>
<h4 id="zsh-syntax-highlighting"><a href="#zsh-syntax-highlighting" class="headerlink" title="zsh-syntax-highlighting"></a>zsh-syntax-highlighting</h4><ul>
<li><p><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3pzaC11c2Vycy96c2gtc3ludGF4LWhpZ2hsaWdodGluZw==">官网<i class="fa fa-external-link-alt"></i></span></p>
</li>
<li><p>作用: 语法检查</p>
</li>
<li><p>安装</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/zsh-users/zsh-syntax-highlighting.git <span class="variable">$&#123;ZSH_CUSTOM:-~/.oh-my-zsh/custom&#125;</span>/plugins/zsh-syntax-highlighting</span><br></pre></td></tr></table></figure>
<p>然后在<code>~/.zshrc</code> 中配置</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">plugins=(其他的插件 zsh-syntax-highlighting)</span><br></pre></td></tr></table></figure>
<p>最后执行</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">source</span> ~/.zshrc</span><br></pre></td></tr></table></figure></li>
</ul>
<h4 id="zsh-autosuggestions"><a href="#zsh-autosuggestions" class="headerlink" title="zsh-autosuggestions"></a>zsh-autosuggestions</h4><p><img data-src="2019-07-12-23-52-32.png"></p>
<ul>
<li><p><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3pzaC11c2Vycy96c2gtYXV0b3N1Z2dlc3Rpb25z">官网<i class="fa fa-external-link-alt"></i></span></p>
</li>
<li><p>作用: 补全, 按→即可, 也可以自定义补全快捷键, 如要添加<code>,</code>, 则在<code>~/.zshrc</code> 中添加</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">bindkey</span> <span class="string">&#x27;,&#x27;</span> autosuggest-accept</span><br></pre></td></tr></table></figure>
<p>即可</p>
</li>
<li><p>安装</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> git://github.com/zsh-users/zsh-autosuggestions <span class="variable">$ZSH_CUSTOM</span>/plugins/zsh-autosuggestions</span><br></pre></td></tr></table></figure>
<p>然后在<code>~/.zshrc</code> 中配置</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">plugins=(其他的插件 zsh-syntax-highlighting)</span><br></pre></td></tr></table></figure>
<p>最后执行</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">source</span> ~/.zshrc</span><br></pre></td></tr></table></figure></li>
</ul>
<h4 id="bat"><a href="#bat" class="headerlink" title="bat"></a>bat</h4><p><img data-src="2019-07-12-23-52-56.png"></p>
<ul>
<li><p><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3NoYXJrZHAvYmF0">官网<i class="fa fa-external-link-alt"></i></span></p>
</li>
<li><p>作用: 与 <code>cat</code> 相同, 只是会添加行号和语法高亮</p>
</li>
<li><p>安装</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">wget https://github.com/sharkdp/bat/releases/download/v0.11.0/bat_0.11.0_amd64.deb</span><br><span class="line">dpkg -i bat_0.11.0_amd64.deb</span><br></pre></td></tr></table></figure></li>
</ul>
<h2 id="安装图形界面"><a href="#安装图形界面" class="headerlink" title="安装图形界面"></a>安装图形界面</h2><h3 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a>方法一</h3><blockquote>
<p>此方法我没有实现</p>
</blockquote>
<p>视频在<span class="exturl" data-url="aHR0cHM6Ly93d3cuYmlsaWJpbGkuY29tL3ZpZGVvL2F2MjA3MTY2MjEv">这里<i class="fa fa-external-link-alt"></i></span></p>
<ol>
<li>新建脚本并运行</li>
</ol>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="meta">#! /bin/bash</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;[+] Installing XFCE4, this will take a while&quot;</span></span><br><span class="line">apt-get update</span><br><span class="line">apt-get dist-upgrade -y --force-yes</span><br><span class="line">apt-get --yes --force-yes install kali-desktop-xfce xorg xrdp</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;[+] Configuring XRDP to listen on port 3390 (but not starting the service)...&quot;</span></span><br><span class="line">sed -i <span class="string">&#x27;s/port=3389/port=3390/g&#x27;</span> /etc/xrdp/xrdp.ini</span><br></pre></td></tr></table></figure>
<div class="note warning"><p>由于原脚本在国外, 获取速度相当慢, 就把它留在下面了<br>原本的脚本可以用以下命令获取</p>
</div>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">wget https://kali.sh/xfce4.sh</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>启动 xfce4 服务</li>
</ol>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">/etc/init.d/xrdp start</span><br></pre></td></tr></table></figure>

<h3 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h3><blockquote>
<p>已实现</p>
</blockquote>
<p><img data-src="2019-07-12-23-56-32.png"></p>
<ol>
<li><p>安装 xfce4 和中文支持</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">apt-get install xfce4 fonts-noto-cjk</span><br></pre></td></tr></table></figure></li>
<li><p>Windows 上安装 VcXsrv<br>见<span class="exturl" data-url="aHR0cHM6Ly9zb3VyY2Vmb3JnZS5uZXQvcHJvamVjdHMvdmN4c3J2Lw==">这里<i class="fa fa-external-link-alt"></i></span></p>
</li>
<li><p>配置输出<br>在 <code>~/.zshrc</code>(如果用的是bash就用<code>~/.bashrc</code>) 中添加</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">export</span> DISPLAY=:0.0</span><br></pre></td></tr></table></figure></li>
<li><p>启动桌面</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">startxfce4</span><br></pre></td></tr></table></figure>
<blockquote>
<p>启动后遇到问题, 可以用以下脚本解决</p>
</blockquote>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">rm -rf ~/.config/xfce4</span><br><span class="line">rm -rf ~/.cache/sessions</span><br></pre></td></tr></table></figure></li>
</ol>
<h2 id="配置-Vim"><a href="#配置-Vim" class="headerlink" title="配置 Vim"></a>配置 Vim</h2><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/tomasr/molokai</span><br><span class="line">cp ./molokai/colors/molokai.vim  ~/.vim/colors</span><br></pre></td></tr></table></figure>

<div class="note warning"><p>到此为止</p>
</div>
]]></content>
      <categories>
        <category>总结</category>
      </categories>
      <tags>
        <tag>Kali</tag>
        <tag>WSL</tag>
        <tag>zsh</tag>
      </tags>
  </entry>
  <entry>
    <title>《家有儿女》二三事</title>
    <url>/two-or-three-things-in-family-with-children/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">
  <script id="hbeData" type="hbeData" data-hmacdigest="99eb06c97c41efb5daba3dca88194e668b4c4d4f4d41d48ebfcdb967f49d1a89"></script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-shrink">
      <input class="hbe hbe-input-field hbe-input-field-shrink" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-shrink" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-shrink">我老家最好的朋友的名字</span>
      </label>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>记录</category>
      </categories>
      <tags>
        <tag>家有儿女</tag>
        <tag>个人感想</tag>
      </tags>
  </entry>
  <entry>
    <title>数据库大作业</title>
    <url>/big-database-job/</url>
    <content><![CDATA[<div class="note warning"><p>本文主要介绍一下如何配置数据库大作业, 以及如何进行验证。</p>
</div>
<span id="more"></span>

<h2 id="拉取镜像到本地"><a href="#拉取镜像到本地" class="headerlink" title="拉取镜像到本地"></a>拉取镜像到本地</h2><div class="note danger"><p>注意，以下二者选择其一即可。<br>第一种由于数据库在我电脑上，所以只能在校园网环境下使用。第二种会配置数据库环境，可以独立运行。</p>
</div>

<h3 id="仅-Web-环境"><a href="#仅-Web-环境" class="headerlink" title="仅 Web 环境"></a>仅 Web 环境</h3><p>以下命令拉取后只包含一个 Web 环境，数据库在我电脑上。</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">docker pull htharoldht/signin-database <span class="comment"># 仅拉取 Web 环境</span></span><br></pre></td></tr></table></figure>

<h3 id="Web-环境和数据库环境"><a href="#Web-环境和数据库环境" class="headerlink" title="Web 环境和数据库环境"></a>Web 环境和数据库环境</h3><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">docker pull htharoldht/signin-web <span class="comment"># 拉取 Web 环境</span></span><br><span class="line">docker pull htharoldht/signin-mysql <span class="comment"># 拉取数据库</span></span><br></pre></td></tr></table></figure>

<h2 id="启动环境"><a href="#启动环境" class="headerlink" title="启动环境"></a>启动环境</h2><h3 id="仅-Web-环境的启动"><a href="#仅-Web-环境的启动" class="headerlink" title="仅 Web 环境的启动"></a>仅 Web 环境的启动</h3><p>在终端里运行以下命令</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">docker run -d -p 8080:8080 htharoldht/signin-database</span><br></pre></td></tr></table></figure>

<p><img data-src="2019-04-13-15-27-45.png"><br>其中，这一串数字是容器的 ID，之后结束环境的时候会用到。</p>
<h3 id="Web-环境和数据库环境的启动"><a href="#Web-环境和数据库环境的启动" class="headerlink" title="Web 环境和数据库环境的启动"></a>Web 环境和数据库环境的启动</h3><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">docker run --name mysql -d -p 3306:3306 -p 8080:8080 htharoldht/signin-mysql <span class="comment"># 数据库环境的启动</span></span><br><span class="line">docker run --name web --net=container:mysql -d htharoldht/signin-web <span class="comment"># Web 环境的启动</span></span><br></pre></td></tr></table></figure>

<p><img data-src="2019-04-13-23-33-06.png"><br>同样的，这两串数字也会在结束环境的时候用到。</p>
<h2 id="环境测试"><a href="#环境测试" class="headerlink" title="环境测试"></a>环境测试</h2><p>打开浏览器，浏览以下网址即进入登录界面，其中第一个字段是 docker 宿主机的 IP 地址，如果宿主机就是本机的话，也可以直接使用 <code>127.0.0.1:8080</code>。<br>因为我是在虚拟机中开的环境，物理机中进行的测试，所以使用的是虚拟机的 IP 地址。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://192.168.153.154:8080/SignIn/</span><br></pre></td></tr></table></figure>

<h3 id="登录"><a href="#登录" class="headerlink" title="登录"></a>登录</h3><p>首页为学生登录界面，若是老师，需要点击我是老师。<br><img data-src="2019-04-13-14-52-17.png"></p>
<h4 id="学生"><a href="#学生" class="headerlink" title="学生"></a>学生</h4><p>用户名和密码如下，任选其一即可登录。</p>
<table>
<thead>
<tr>
<th align="center">用户名</th>
<th align="center">密码</th>
<th></th>
<th align="center">用户名</th>
<th align="center">密码</th>
</tr>
</thead>
<tbody><tr>
<td align="center">00127</td>
<td align="center">123456</td>
<td></td>
<td align="center">00128</td>
<td align="center">123456</td>
</tr>
<tr>
<td align="center">12345</td>
<td align="center">123456</td>
<td></td>
<td align="center">19991</td>
<td align="center">123456</td>
</tr>
<tr>
<td align="center">23121</td>
<td align="center">123456</td>
<td></td>
<td align="center">44553</td>
<td align="center">123456</td>
</tr>
<tr>
<td align="center">45678</td>
<td align="center">123456</td>
<td></td>
<td align="center">54321</td>
<td align="center">123456</td>
</tr>
<tr>
<td align="center">55739</td>
<td align="center">123456</td>
<td></td>
<td align="center">70557</td>
<td align="center">123456</td>
</tr>
<tr>
<td align="center">76543</td>
<td align="center">123456</td>
<td></td>
<td align="center">98765</td>
<td align="center">123456</td>
</tr>
<tr>
<td align="center">98988</td>
<td align="center">123456</td>
<td></td>
<td align="center"></td>
<td align="center"></td>
</tr>
</tbody></table>
<h4 id="老师"><a href="#老师" class="headerlink" title="老师"></a>老师</h4><p>老师登录界面和学生的基本一致，只是细节不同：<br><img data-src="2019-04-13-14-53-33.png"><br>用户名和密码如下，任选其一即可登录。</p>
<table>
<thead>
<tr>
<th align="center">用户名</th>
<th align="center">密码</th>
<th></th>
<th align="center">用户名</th>
<th align="center">密码</th>
</tr>
</thead>
<tbody><tr>
<td align="center">10101</td>
<td align="center">123456</td>
<td></td>
<td align="center">12121</td>
<td align="center">123456</td>
</tr>
<tr>
<td align="center">15151</td>
<td align="center">123456</td>
<td></td>
<td align="center">22222</td>
<td align="center">123456</td>
</tr>
<tr>
<td align="center">32343</td>
<td align="center">123456</td>
<td></td>
<td align="center">33456</td>
<td align="center">123456</td>
</tr>
<tr>
<td align="center">45565</td>
<td align="center">123456</td>
<td></td>
<td align="center">58583</td>
<td align="center">123456</td>
</tr>
<tr>
<td align="center">76543</td>
<td align="center">123456</td>
<td></td>
<td align="center">76766</td>
<td align="center">123456</td>
</tr>
<tr>
<td align="center">83821</td>
<td align="center">123456</td>
<td></td>
<td align="center">98345</td>
<td align="center">123456</td>
</tr>
</tbody></table>
<h2 id="签到"><a href="#签到" class="headerlink" title="签到"></a>签到</h2><p>签到之前需要由老师设置签到，而后学生的签到才是有效的。</p>
<h3 id="老师发布签到"><a href="#老师发布签到" class="headerlink" title="老师发布签到"></a>老师发布签到</h3><p>以下以 <code>10101@123456</code> 为例进行演示。<br>老师登录后将看到如下界面：<br><img data-src="2019-04-13-15-10-04.png"><br>老师需要手动设置相应的课程名编号、课程段编号、学期与年进行发布签到。其课选择的内容如下：</p>
<table>
<thead>
<tr>
<th align="center">课程名编号</th>
<th align="center">课程段编号</th>
<th align="center">学期</th>
<th align="center">年</th>
</tr>
</thead>
<tbody><tr>
<td align="center">CS-101</td>
<td align="center">1</td>
<td align="center">Fall</td>
<td align="center">2009</td>
</tr>
<tr>
<td align="center">CS-101</td>
<td align="center">1</td>
<td align="center">Spring</td>
<td align="center">2010</td>
</tr>
<tr>
<td align="center">CS-190</td>
<td align="center">1</td>
<td align="center">Spring</td>
<td align="center">2009</td>
</tr>
<tr>
<td align="center">CS-190</td>
<td align="center">2</td>
<td align="center">Spring</td>
<td align="center">2009</td>
</tr>
<tr>
<td align="center">CS-315</td>
<td align="center">1</td>
<td align="center">Spring</td>
<td align="center">2010</td>
</tr>
<tr>
<td align="center">CS-319</td>
<td align="center">1</td>
<td align="center">Spring</td>
<td align="center">2010</td>
</tr>
<tr>
<td align="center">CS-319</td>
<td align="center">2</td>
<td align="center">Spring</td>
<td align="center">2010</td>
</tr>
<tr>
<td align="center">CS-347</td>
<td align="center">1</td>
<td align="center">Fall</td>
<td align="center">2009</td>
</tr>
<tr>
<td align="center">EE-181</td>
<td align="center">1</td>
<td align="center">Spring</td>
<td align="center">2009</td>
</tr>
<tr>
<td align="center">MU-199</td>
<td align="center">1</td>
<td align="center">Spring</td>
<td align="center">2010</td>
</tr>
<tr>
<td align="center">BIO-101</td>
<td align="center">1</td>
<td align="center">Summer</td>
<td align="center">2009</td>
</tr>
<tr>
<td align="center">BIO-301</td>
<td align="center">1</td>
<td align="center">Summer</td>
<td align="center">2010</td>
</tr>
<tr>
<td align="center">FIN-201</td>
<td align="center">1</td>
<td align="center">Spring</td>
<td align="center">2010</td>
</tr>
<tr>
<td align="center">HIS-351</td>
<td align="center">1</td>
<td align="center">Spring</td>
<td align="center">2010</td>
</tr>
<tr>
<td align="center">PHY-101</td>
<td align="center">1</td>
<td align="center">Fall</td>
<td align="center">2009</td>
</tr>
</tbody></table>
<p>以 <code>CS-101@1@Fall@2009</code> 为例，设置好了以后，点击开始签到，则老师会进入一个缓冲页面：<br><img data-src="2019-04-13-15-07-14.png"><br>当点击查看未签到的学生时，则将会看到所有上该门课的未签到的学生学号和姓名，如下所示：<br><img data-src="2019-04-13-15-10-42.png"></p>
<h3 id="学生签到"><a href="#学生签到" class="headerlink" title="学生签到"></a>学生签到</h3><p>以下以 <code>123456@123456</code> 为例进行演示。<br>学生登录后将会看到如下界面：<br><img data-src="2019-04-13-15-13-16.png"><br>当学生输入老师要求的相应的课程名编号、课程段编号、学期与年后即可点击签到进行有效的签到。<br>当签到成功时，会显示如下界面：<br><img data-src="2019-04-13-15-51-07.png"><br>否则签到不成功。</p>
<h2 id="结束环境"><a href="#结束环境" class="headerlink" title="结束环境"></a>结束环境</h2><p>在终端中执行以下命令</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">docker stop 674f36e74</span><br></pre></td></tr></table></figure>

<p>其中，674f36e74 是在签到环境的时候生成的一串数字，不需要所有的数字，只需要前面几位即可。</p>
<p>注：选择第二种方式的，需要结束两个环境，方法同上。</p>
<hr>
<p>至此，整个大作业的演示就已经结束了。</p>
]]></content>
      <categories>
        <category>作业</category>
      </categories>
      <tags>
        <tag>docker</tag>
        <tag>数据库</tag>
        <tag>作业</tag>
      </tags>
  </entry>
  <entry>
    <title>瑞格相关操作</title>
    <url>/regal-related-operations/</url>
    <content><![CDATA[<div class="note warning"><p>学校的瑞格平台漏洞百出, 本文记录部分刷题时会用到的bug。</p>
</div>
<span id="more"></span>

<p>注：本文均采用火狐浏览器，其他浏览器类似</p>
<h1 id="上机部分"><a href="#上机部分" class="headerlink" title="上机部分"></a>上机部分</h1><h2 id="超时后仍然提交代码"><a href="#超时后仍然提交代码" class="headerlink" title="超时后仍然提交代码"></a>超时后仍然提交代码</h2><h3 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a>方法一</h3><p>浏览器打开控制台, 即按 F12，在 查看器 选项卡中，搜索 “提交”，而定位到隐藏 “提交” 相关代码，如下所示</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">submitbtn</span>=<span class="string">&quot;1&quot;</span> <span class="attr">class</span>=<span class="string">&quot;f_button4 btn&quot;</span> <span class="attr">onclick</span>=<span class="string">&quot;return setmyselflanguage();&quot;</span> <span class="attr">id</span>=<span class="string">&quot;exerSubBtn2&quot;</span> <span class="attr">href</span>=<span class="string">&quot;javascript:submitPrg(9174,0,0,17669)&quot;</span> <span class="attr">style</span>=<span class="string">&quot;display: none;&quot;</span>&gt;</span> 提交 <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>从这里可以看出, 其实页面只是采用隐藏的方式不显示 “提交” 按钮, 所以方法就简单了——只要让属性为页面可见即可<br>最简单的方式就是删掉属性, 双击 <code>style=</code> 引号中的部分, 然后退格最后敲回车。</p>
<p><img data-src="%E8%B6%85%E6%97%B6%E6%8F%90%E4%BA%A4_1.gif" alt="超时提交_1"></p>
<p>好了, 现在就可以<code>提交</code>了。</p>
<h3 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h3><p>打开控制台, 控制台运行代码</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">javascript:submitPrg(题目 ID, <span class="number">0</span>, <span class="number">0</span>, 随机数)</span><br></pre></td></tr></table></figure>

<p>例如</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">javascript:submitPrg(<span class="number">9174</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">17</span>)</span><br></pre></td></tr></table></figure>

<p><img data-src="%E8%B6%85%E6%97%B6%E6%8F%90%E4%BA%A4_2.gif" alt="超时提交_1"></p>
<p>注意: 此处的题目 ID 与实际的题目会有所差别, 推测第一个字段表示单元, 题目 ID 是以 0 开始的, 而单元是以 1 开始的。</p>
<p>则会提交 1074 的答案。</p>
<h2 id="查看答案"><a href="#查看答案" class="headerlink" title="查看答案"></a>查看答案</h2><p>打开控制台, 控制台运行代码</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">javascript:showMyPrgKey(题目 ID, 随机数)</span><br></pre></td></tr></table></figure>

<p>例如</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">javascript:showMyPrgKey(<span class="number">9174</span>, <span class="number">17</span>)</span><br></pre></td></tr></table></figure>

<p>注意: 此处的题目 ID 与实际的题目会有所差别, 推测第一个字段表示单元, 题目 ID 是以 0 开始的, 而单元是以 1 开始的。</p>
<p>则会在另一个浏览器窗口中弹出题目为 1074 的答案。</p>
<p><img data-src="%E6%9F%A5%E7%9C%8B%E7%AD%94%E6%A1%88.gif" alt="查看答案"></p>
<h1 id="课后作业部分"><a href="#课后作业部分" class="headerlink" title="课后作业部分"></a>课后作业部分</h1><h2 id="方框类型-代码或填空题"><a href="#方框类型-代码或填空题" class="headerlink" title="方框类型(代码或填空题)"></a>方框类型(代码或填空题)</h2><p>先输入待提交的代码, 再打开控制台, 控制台运行代码</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">javascript:submitFill(题目 ID, <span class="number">0</span>, <span class="number">0</span>, 随机数)</span><br></pre></td></tr></table></figure>

<p>例如</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">javascript:submitFill(<span class="number">8653</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">17682</span>)</span><br></pre></td></tr></table></figure>

<p>注意: 此处的题目 ID 与实际的题目会有所差别, 推测第一个字段表示单元,题目 ID 是以 0 开始的, 而单元是以 1 开始的。</p>
<p>则会将方框中的内容提交到服务器中</p>
<p><img data-src="%E6%96%B9%E6%A1%86%E5%9E%8B%E6%8F%90%E4%BA%A4.gif" alt="方框型提交"></p>
<h2 id="选项类型-选择题"><a href="#选项类型-选择题" class="headerlink" title="选项类型(选择题)"></a>选项类型(选择题)</h2><p>先点击选项, 再打开控制台, 控制台运行代码</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">javascript:submitSel(题目 ID, <span class="number">0</span>, <span class="number">0</span>, 随机数)</span><br></pre></td></tr></table></figure>

<p>例如</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">javascript:submitSel(<span class="number">10544</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">22</span>)</span><br></pre></td></tr></table></figure>

<p>注意: 此处的题目 ID 与实际的题目会有所差别, 推测第一个字段表示单元,题目 ID 是以 0 开始的, 而单元是以 1 开始的。</p>
<p>则会将选中的选项提交到服务器中</p>
<p><img data-src="%E9%80%89%E9%A1%B9%E5%9E%8B%E6%8F%90%E4%BA%A4.gif" alt="选项型提交"></p>
<h2 id="查看此部分答案"><a href="#查看此部分答案" class="headerlink" title="查看此部分答案"></a>查看此部分答案</h2><p>打开控制台, 控制台运行代码</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">javascript:showMyPrgKey(题目 ID, 随机数)</span><br></pre></td></tr></table></figure>

<p>例如</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">javascript:showMyPrgKey(<span class="number">9174</span>, <span class="number">17</span>)</span><br></pre></td></tr></table></figure>

<p>注意: 此处的题目 ID 与实际的题目会有所差别, 推测第一个字段表示单元, 题目 ID 是以 0 开始的, 而单元是以 1 开始的。</p>
<p>则会在另一个浏览器窗口中弹出题目为 1074 的答案。</p>
<p><img data-src="%E6%9F%A5%E7%9C%8B%E7%AD%94%E6%A1%88.gif" alt="查看答案"></p>
]]></content>
      <categories>
        <category>北科</category>
      </categories>
      <tags>
        <tag>北科</tag>
        <tag>瑞格</tag>
        <tag>骚操作</tag>
      </tags>
  </entry>
</search>
